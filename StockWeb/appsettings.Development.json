{
  //"Logging": {
  //  "LogLevel": {
  //    "Default": "Information",
  //    "Microsoft.AspNetCore": "Warning"
  //  }
  //},
  "ConnectionStrings": {
    "Stock": "Data Source=.,1434;User ID=sa;Password=Test.123;Initial Catalog=Stock;TrustServerCertificate=true"
    //Scaffold-DbContext "Data Source=.,1434;User ID=sa;Password=Test.123;Initial Catalog=Stock;TrustServerCertificate=true" Microsoft.EntityFrameworkCore.SqlServer -OutputDir DbModels
  },
  "JwtSettings": {
    "Key": "YmFzZTY0OjMyYnl0ZXM6QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaA==",
    "Issuer": "StockWebApiFromDeus",
    "ExpiredTime": 5 //單位 分鐘
    //"RefreshTokenExpiredTime": 1440 //單位 分鐘
  },
  "Serilog": {
    "MinimumLevel": {
      "Default": "Debug",
      "Override": {
        //"System": "Warning",
        "Microsoft": "Warning",
        "Microsoft.EntityFrameworkCore": "Information"
      }
    }
    //,"Enrich": [ "FromLogContext" ], //允許 Serilog 從每個日誌事件中提取額外的上下文資訊，如SourceContext，但是如果使用ILogger<T>的話，不設定Enrich，SeriLog也會自動把T當作SourceContext
    //,"WriteTo": [
    //  {
    //    "Name": "Console",
    //    "Args": {
    //      "outputTemplate": "[{SourceContext}][{Level}]{NewLine}{Message}{NewLine}{NewLine}" //調整輸出模板。例如，使用 {SourceContext} 可以在日誌中包含源類別的名稱。  但是如果有輸出模板的話，如果Message本身有\r\n這種符號，就會被當成字符印出來... 而不會像預設那樣用作輸出格式調整....
    //    }
    //  },
    //  {
    //    "Name": "Debug"
    //  }
    //]
  },
  "LogPath": {
    "Request": "../logs/Request/request-.json",
    "Login": "../logs/Login/login-.json",
    "Error": "../logs/Error/error-.json"
  },

  "Test": {
    "TestProp1": "abce123",
    "TestArray": [ -1, 0, 1, 2, 3 ]
  }

}
